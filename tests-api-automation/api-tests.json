{
  "info": {
    "name": "API Tests",
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "description": "API tests for login and item CRUD operations with positive and negative test cases",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "POST /login - Valid Credentials",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"user1\",\n  \"password\": \"pass\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "const jsonData = pm.response.json();",
              "pm.environment.set(\"authToken\", jsonData.token);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST /login - Invalid Credentials",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"user1\",\n  \"password\": \"wrongpass\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", () => {",
              "    pm.response.to.have.status(401);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST /login - Missing Fields",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"user1\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", () => {",
              "    pm.response.to.have.status(400);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /items - With Valid Token",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" }
        ],
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": ["{{baseUrl}}"],
          "path": ["items"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response is an array\", () => {",
              "    pm.expect(pm.response.json()).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /items - Without Token",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": ["{{baseUrl}}"],
          "path": ["items"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401 or 403\", () => {",
              "    pm.expect(pm.response.code).to.be.oneOf([401,403]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST /items - Valid Data",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test Item\",\n  \"description\": \"desc\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": ["{{baseUrl}}"],
          "path": ["items"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "    pm.response.to.have.status(201);",
              "});",
              "const jsonData = pm.response.json();",
              "pm.environment.set(\"itemId\", jsonData.id || jsonData._id);",
              "pm.test(\"Response contains item name\", () => {",
              "    pm.expect(jsonData.name).to.eql(\"Test Item\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST /items - Missing Required Field",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"description\": \"desc\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": ["{{baseUrl}}"],
          "path": ["items"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", () => {",
              "    pm.response.to.have.status(400);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "POST /items - Without Token",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Test Item\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items",
          "host": ["{{baseUrl}}"],
          "path": ["items"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401 or 403\", () => {",
              "    pm.expect(pm.response.code).to.be.oneOf([401,403]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT /items/:id - Valid Update",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Updated Item\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": ["{{baseUrl}}"],
          "path": ["items", "{{itemId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "const jsonData = pm.response.json();",
              "pm.test(\"Response contains updated name\", () => {",
              "    pm.expect(jsonData.name).to.eql(\"Updated Item\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT /items/:id - Update Non-existent Item",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Updated Item\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items/invalid-id-123",
          "host": ["{{baseUrl}}"],
          "path": ["items", "invalid-id-123"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "    pm.response.to.have.status(404);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT /items/:id - Invalid Data",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": ["{{baseUrl}}"],
          "path": ["items", "{{itemId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", () => {",
              "    pm.response.to.have.status(400);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "PUT /items/:id - Without Token",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Updated Item\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": ["{{baseUrl}}"],
          "path": ["items", "{{itemId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401 or 403\", () => {",
              "    pm.expect(pm.response.code).to.be.oneOf([401,403]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE /items/:id - Valid Delete",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" }
        ],
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": ["{{baseUrl}}"],
          "path": ["items", "{{itemId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE /items/:id - Delete Non-existent Item",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{authToken}}" }
        ],
        "url": {
          "raw": "{{baseUrl}}/items/invalid-id-123",
          "host": ["{{baseUrl}}"],
          "path": ["items", "invalid-id-123"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "    pm.response.to.have.status(404);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "DELETE /items/:id - Without Token",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/items/{{itemId}}",
          "host": ["{{baseUrl}}"],
          "path": ["items", "{{itemId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401 or 403\", () => {",
              "    pm.expect(pm.response.code).to.be.oneOf([401,403]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
